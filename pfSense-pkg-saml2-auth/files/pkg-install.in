#!/bin/sh
if [ "${2}" != "POST-INSTALL" ]; then
 exit 0
fi

# --- Constants ---
PFSENSE_VERSION=$(/bin/cat /etc/version)
PATCH_DIR="/usr/local/share/pfSense-pkg-saml2-auth/patches/default"
V1_BACKUP_FILE="/usr/local/share/pfSense-pkg-saml2-auth/backup.json"
V2_BACKUP_FILE="/var/cache/pfSense-pkg-saml2-auth/backup.json"

# --- Functions ---
# Function to apply a patch and handle errors
# Arguments:
#   $1 - The target file to be patched
#   $2 - The patch file to apply
apply_patch() {
    local target_file=$1
    local patch_file=$2
    /usr/bin/patch "${target_file}" < "${patch_file}" >> /tmp/pfSense-pkg-saml2-auth-install.log 2>&1 || {
        /bin/echo "failed!"
        exit 1
    }
}

# --- Runtime ---
# Make this package known to pfSense
/usr/local/bin/php -f /etc/rc.packages %%PORTNAME%% ${2}

# Ensure the cache directory exists
/bin/mkdir -p /var/cache/pfSense-pkg-saml2-auth

# When version specific patches are available, use those instead of the default patches
if [ -d "/usr/local/share/pfSense-pkg-saml2-auth/patches/${PFSENSE_VERSION}" ]
then
    PATCH_DIR="/usr/local/share/pfSense-pkg-saml2-auth/patches/${PFSENSE_VERSION}"
fi

# Apply the necessary patches to pfSense core files
/bin/echo -n "Applying patches for ${PFSENSE_VERSION}... "
apply_patch /etc/inc/auth.inc "${PATCH_DIR}/auth.inc.patch"
apply_patch /etc/inc/authgui.inc "${PATCH_DIR}/authgui.inc.patch"
apply_patch /etc/inc/priv.inc "${PATCH_DIR}/priv.inc.patch"
/bin/echo "done."

# Link the pfSense SAML2 CLI tool and make the manage script executable
/bin/echo -n "Setting up command line tools... "
/bin/ln -s /usr/local/pkg/Saml2/manage.php /usr/local/bin/pfsense-saml2
/bin/chmod +x /usr/local/pkg/Saml2/manage.php
echo "done."

# When a v1 backup exists and no v2 backup exists, migrate the v1 backup to v2 location
if [ -f "${V1_BACKUP_FILE}" ] && [ ! -f "${V2_BACKUP_FILE}" ]
then
    /bin/cp "${V1_BACKUP_FILE}" "${V2_BACKUP_FILE}"
fi

# Restore previous SAML2 configuration
/usr/local/bin/php -f /usr/local/pkg/Saml2/manage.php restore

# Setup cache and schedules
/usr/local/bin/php -f /usr/local/pkg/Saml2/manage.php refreshcache
/usr/local/bin/php -f /usr/local/pkg/Saml2/manage.php removeschedule # Remove any existing schedules first
/usr/local/bin/php -f /usr/local/pkg/Saml2/manage.php setupschedule
